version: "3.9"

services:
  db-service:
    image: postgres:17
    container_name: dmvs_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - dmvs
    volumes:
      - dmvs_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend-service:
    container_name: dmvs_backend
    build:
      context: .
      dockerfile: Dockerfile
    image: fastapi
    restart: unless-stopped
    depends_on:
      db-service:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres-service:5432/${DB_NAME}
    networks:
      - dmvs
    volumes:
      - ".:/usr/src/app"
    user: "1000:1000"

  db-browser-service:
    image: adminer:latest
    container_name: adminer-browser
    restart: unless-stopped
    depends_on:
      - db-service
    networks:
      - dmvs
    ports:
      - "8080:8080"

  smtp-mail-service:
    image: axllent/mailpit:v1.23
    container_name: smtp-mail
    restart: unless-stopped
    networks:
      - dmvs
    ports:
      - "8025:8025"
      - "1025:1025"

networks:
  dmvs:
    driver: bridge

volumes:
  dmvs_db:
